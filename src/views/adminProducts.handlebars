<style>
  body {
    font-family: 'Arial', sans-serif;
    line-height: 1.6;
    background-color: #D9FFFF;
    padding: 20px;
    display: flex;
    flex-direction: column;
    min-height: 100vh;
  }

  .table-container {
    overflow-x: auto;
    /* Permite que la tabla se desplace horizontalmente en pantallas pequeñas */
  }

  .table {
    width: 100%;
    border-collapse: collapse;
    white-space: nowrap;
  }

  th,
  td {
    padding: 12px;
    text-align: center;
    border-bottom: 1px solid #ddd;
    vertical-align: middle;
    height: 60px;
  }

  th {
    background-color: #fff;
    color: #333;
    font-weight: bold;
  }

  td {
    background-color: #f9f9f9;
  }

  /* Estilo del input de búsqueda */
  #search {
    width: 100%;
    padding: 8px;
    /* Reducido para un aspecto más estético */
    margin-bottom: 20px;
    border: 2px solid #ff6456;
    border-radius: 5px;
    background-color: #fff;
    color: #333;
    transition: border-color 0.3s;
    /* Añadido para un efecto al enfocar */
  }

  #search:focus {
    border-color: #ff4c3b;
    /* Cambia el borde al enfocar */
  }

  /* Estilo del selector de orden */
  select {
    padding: 10px;
    margin: 0 10px;
    border: 2px solid #ff6456;
    border-radius: 5px;
    background-color: #fff;
    color: #333;
  }

  /* Estilos del botón */
  .btn {
    padding: 8px 16px;
    /* Reducido para un tamaño más pequeño */
    font-size: 14px;
    /* Tamaño de fuente más pequeño */
    border: none;
    border-radius: 5px;
    cursor: pointer;
  }

  .btn-primary {
    background-color: #5bc0de;
    /* Color celeste */
    color: white;
    font-weight: bold;
  }

  .btn-primary:hover {
    background-color: #31b0d5;
    /* Color más oscuro al pasar el ratón */
  }

  .btn-danger {
    background-color: #f56363;
    /* Rojo más claro */
    color: white;
  }

  .btn-danger:hover {
    background-color: #f05555;
    /* Color más oscuro al pasar el ratón */
  }

  button.btn-success,
  select {
    margin-top: 15px;
  }

  .pagination {
    display: flex;
    justify-content: center;
    align-items: center;
    margin-top: 20px;
  }

  .pagination a {
    color: #333;
    padding: 8px 16px;
    text-decoration: none;
    border: 1px solid #ccc;
    margin: 0 5px;
    margin-top: 1%;
    border-radius: 4px;
    transition: background-color 0.3s ease, color 0.3s ease;
  }

  .pagination a:hover {
    background-color: #ff6456;
    color: #fff;
  }

  .btn-add {
    margin-top: 2%;
    margin-bottom: 2%;
  }

  .navbarDash {
    background-color: #fffefe;
    display: flex;
    justify-content: space-between;
    align-items: center;
    padding: 10px 20px;
    box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
    margin-bottom: 3%;
  }

  .navbar-leftDash {
    display: flex;
    align-items: center;
  }

  .navbar-logoDash img {
    width: 50px;
    /* Ajusta el tamaño del logo según sea necesario */
    height: auto;
    margin-right: 20px;
  }

  .navbar-itemDash {
    margin-right: 15px;
    text-decoration: none;
    color: #333;
    font-weight: bold;
  }

  .navbar-itemDash:last-child {
    margin-right: 0;
  }

  @media (max-width: 768px) {
    .navbarDash {
      flex-direction: column;
      align-items: flex-start;
    }

    .navbar-leftDash {
      flex-direction: column;
      width: 100%;
    }

    .navbar-itemDash {
      margin: 5px 0;
      width: 100%;
      text-align: left;
    }

    th,
    td {
      padding: 8px;
      font-size: 12px;
      /* Reducir tamaño de fuente en pantallas pequeñas */
      height: auto;
      /* Ajustar altura de las celdas */
    }

    .table-container {
      overflow-x: auto;
      /* Permitir scroll horizontal */
    }

    .table {
      white-space: nowrap;
      /* Evitar que el texto se desborde */
      display: block;
      /* Para manejar mejor el scroll horizontal */
    }
  }
</style>

<script>
  function searchByTitle() {
    const searchInput = document.getElementById('search').value.toLowerCase();
    const rows = document.querySelectorAll('tbody tr');

    rows.forEach(row => {
      const title = row.querySelector('td:nth-child(2)').textContent.toLowerCase();
      row.style.display = title.includes(searchInput) ? '' : 'none';
    });
  }

  function sortByColumn(columnIndex) {
    const rows = Array.from(document.querySelectorAll('tbody tr'));
    const sortedRows = rows.sort((a, b) => {
      const aText = a.querySelector(`td:nth-child(${columnIndex})`).textContent;
      const bText = b.querySelector(`td:nth-child(${columnIndex})`).textContent;
      return aText.localeCompare(bText, undefined, { numeric: true });
    });

    const tbody = document.querySelector('tbody');
    tbody.innerHTML = '';
    sortedRows.forEach(row => tbody.appendChild(row));
  }

  function openEditModal(product) {
    document.getElementById('productId').value = product._id; // Verifica que product._id es correcto
    document.getElementById('productTitle').value = product.title;
    document.getElementById('productDescription').value = product.description;
    document.getElementById('productPrice').value = product.price;
    document.getElementById('productStock').value = product.stock;


    var modal = new bootstrap.Modal(document.getElementById('editProductModal'));
    modal.show();
  }

  document.addEventListener('DOMContentLoaded', function () {
    document.getElementById('editProductForm').addEventListener('submit', async function (event) {
      event.preventDefault();

      const formData = new FormData(this); // Capturamos los datos del formulario, incluyendo la imagen
      const productId = document.getElementById('productId').value;

      try {
        const response = await fetch(`/admin/products/update/${productId}`, {
          method: 'PUT',
          body: formData,
        });

        if (response.ok) {
          Swal.fire('Producto Actualizado', 'El producto ha sido actualizado correctamente.', 'success');
          location.reload(); // Recargamos la página para ver los cambios actualizados
        } else {
          const error = await response.json();
          Swal.fire('Error', error.message, 'error');
        }
      } catch (error) {
        Swal.fire('Error', 'Ocurrió un problema al actualizar el producto.', 'error');
      }
    });
  });

  document.addEventListener('DOMContentLoaded', function () {
    document.getElementById('addProductForm').addEventListener('submit', async function (event) {
      event.preventDefault();

      const formData = new FormData(this); // Capturamos los datos del formulario, incluyendo la imagen

      try {
        const response = await fetch(`/admin/products/add`, {
          method: 'POST',
          body: formData,
        });

        if (response.ok) {
          Swal.fire('Producto Agregado', 'El producto ha sido agregado correctamente.', 'success');
          document.getElementById('addProductForm').reset(); // Limpiar formulario
          location.reload(); // Recargamos la página para ver los cambios actualizados
        } else {
          const error = await response.json();
          Swal.fire('Error', error.message, 'error');
        }
      } catch (error) {
        Swal.fire('Error', 'Ocurrió un problema al agregar el producto', 'error');
      }
    });
  });

  async function deleteProduct(event, productId) {
    event.preventDefault(); // Prevenir comportamiento predeterminado
    const { value: result } = await Swal.fire({
      title: '¿Estás seguro?',
      text: "¡No podrás recuperar este producto!",
      icon: 'warning',
      showCancelButton: true,
      confirmButtonColor: '#3085d6',
      cancelButtonColor: '#d33',
      confirmButtonText: 'Sí, eliminarlo!',
      cancelButtonText: 'Cancelar'
    });

    if (result) {
      const response = await fetch(`/admin/products/delete/${productId}`, {
        method: 'DELETE',
      });

      if (response.ok) {
        Swal.fire(
          'Eliminado!',
          'El producto ha sido eliminado.',
          'success'
        );
        location.reload(); // Recargar la página o actualizar la tabla de productos
      } else {
        const error = await response.json();
        Swal.fire('Error', error.message, 'error');
      }
    }
  }

</script>
<link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>

<div class="navbarDash">
  <div class="navbar-leftDash">
    <div class="navbar-logoDash">
      <img src="/assets/conf.png" alt="Logo">
    </div>
    <a href="/admin" class="navbar-itemDash">Dashboard</a>
    <a href="/admin/lawers?page=1" class="navbar-itemDash">Usuarios</a>
    <a href="/admin/products?page=1" class="navbar-itemDash">Productos</a>
    <a href="/admin/tickets" class="navbar-itemDash">Pedidos</a>
    <a href="/admin/messages" class="navbar-itemDash">Mensajes</a>
  </div>
</div>

<!-- Input de búsqueda -->
<input type="text" id="search" class="form-control" placeholder="Buscar producto por título..."
  oninput="searchByTitle()">

<!-- Selector de orden -->
<select onchange="sortByColumn(this.value)" class="form-control">
  <option value="2">Ordenar por Título</option>
  <option value="4">Ordenar por Código</option>
  <option value="5">Ordenar por Precio</option>
  <option value="6">Ordenar por Stock</option>
  <option value="7">Ordenar por Categoría</option>
</select>

<button class="btn btn-success btn-add" data-bs-toggle="modal" data-bs-target="#addProductModal">Agregar
  Producto</button>

<div class="table-container">
  <table class="table table-striped">
    <thead>
      <tr>
        <th>ID</th>
        <th>Título</th>
        <th>Descripción</th>
        <th>Código</th>
        <th>Precio</th>
        <th>Stock</th>
        <th>Categoría</th>
        <th>Dueño</th>
        <th>Acciones</th>
      </tr>
    </thead>
    <tbody>
      {{#each products}}
      <tr>
        <td>{{this._id}}</td>
        <td>{{this.title}}</td>
        <td>{{this.description}}</td>
        <td>{{this.code}}</td>
        <td>{{this.price}}</td>
        <td>{{this.stock}}</td>
        <td>{{this.category}}</td>
        <td>{{this.owner}}</td>
        <td>
          <button onclick='openEditModal({{json this}})' class="btn btn-primary">Editar</button>
          <button onclick="deleteProduct(event, '{{this._id}}')" class="btn btn-danger">Eliminar</button>
        </td>
      </tr>
      {{/each}}

      <!-- Modal de edición de producto (fuera del bucle) -->
      <div class="modal fade" id="editProductModal" tabindex="-1" aria-labelledby="editProductModalLabel"
        aria-hidden="true">
        <div class="modal-dialog">
          <div class="modal-content">
            <div class="modal-header">
              <h5 class="modal-title" id="editProductModalLabel">Editar Producto</h5>
              <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <form id="editProductForm" enctype="multipart/form-data">
              <div class="modal-body">
                <!-- Campos del producto -->
                <input type="hidden" id="productId" name="productId" />
                <div class="mb-3">
                  <label for="productTitle" class="form-label">Título</label>
                  <input type="text" class="form-control" id="productTitle" name="title" required>
                </div>
                <div class="mb-3">
                  <label for="productDescription" class="form-label">Descripción</label>
                  <textarea class="form-control" id="productDescription" name="description" required></textarea>
                </div>
                <div class="mb-3">
                  <label for="productPrice" class="form-label">Precio</label>
                  <input type="number" class="form-control" id="productPrice" name="price" required>
                </div>
                <div class="mb-3">
                  <label for="productStock" class="form-label">Stock</label>
                  <input type="number" class="form-control" id="productStock" name="stock">
                </div>
                <div class="mb-3">
                  <label for="productImage" class="form-label">Imagen</label>
                  <input type="file" class="form-control" id="productImage" name="thumbnail">
                </div>
              </div>
              <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cerrar</button>
                <button type="submit" class="btn btn-primary">Guardar cambios</button>
              </div>
            </form>
          </div>
        </div>
      </div>
      <!-- Modal de agregar producto -->
      <div class="modal fade" id="addProductModal" tabindex="-1" aria-labelledby="addProductModalLabel"
        aria-hidden="true">
        <div class="modal-dialog">
          <div class="modal-content">
            <div class="modal-header">
              <h5 class="modal-title" id="addProductModalLabel">Nuevo producto:</h5>
              <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <form id="addProductForm" enctype="multipart/form-data">
              <div class="modal-body">
                <!-- Campos del nuevo producto -->
                <div class="mb-3">
                  <label for="newProductTitle" class="form-label">Título</label>
                  <input type="text" class="form-control" id="newProductTitle" name="title" required>
                </div>
                <div class="mb-3">
                  <label for="newProductDescription" class="form-label">Descripción</label>
                  <textarea class="form-control" id="newProductDescription" name="description" required></textarea>
                </div>
                <div class="mb-3">
                  <label for="newProductCode" class="form-label">Código</label>
                  <textarea class="form-control" id="newProductCode" name="code" required></textarea>
                </div>
                <div class="mb-3">
                  <label for="newProductPrice" class="form-label">Precio</label>
                  <input type="number" class="form-control" id="newProductPrice" name="price" required>
                </div>
                <div class="mb-3">
                  <label for="newProductStock" class="form-label">Stock</label>
                  <input type="number" class="form-control" id="newProductStock" name="stock">
                </div>
                <div class="mb-3">
                  <label for="newProductCategory" class="form-label">Categoría</label>
                  <select name="category" id="newProductCategory" class="form-control" type="text">
                    <option value="Piratas">Piratas</option>
                    <option value="Halloween">Halloween</option>
                    <option value="Cuentos">Cuentos</option>
                    <option value="Superheroes">Superhéroes</option>
                  </select>
                </div>
                <div class="mb-3">
                  <label for="newProductImage" class="form-label">Imagen</label>
                  <input type="file" class="form-control" id="newProductImage" name="thumbnail">
                </div>
              </div>
              <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cerrar</button>
                <button type="submit" class="btn btn-primary">Guardar Producto</button>
              </div>
            </form>
          </div>
        </div>
      </div>
    </tbody>
  </table>
</div>

<div class="pagination">
  {{#if hasPrevPage}}
  <a href="?page={{prevPage}}">Anterior</a>
  {{/if}}
  {{#if hasNextPage}}
  <a href="?page={{nextPage}}">Siguiente</a>
  {{/if}}
</div>