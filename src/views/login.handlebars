<!DOCTYPE html>
<html lang="es">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Iniciar Sesión - Estudio Jurídico</title>
    <style>
        body {
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
            background-color: #f4f7f6;
            display: flex;
            justify-content: center;
            align-items: center;
            min-height: 100vh;
            margin: 0;
            color: #333;
        }
        .login-container {
            background-color: #fff;
            padding: 40px;
            border-radius: 8px;
            box-shadow: 0 4px 15px rgba(0, 0, 0, 0.1);
            width: 100%;
            max-width: 400px;
            text-align: center;
        }
        .login-container h2 {
            margin-bottom: 30px;
            color: #2a3a4a;
            font-weight: 600;
        }
        .input-group {
            margin-bottom: 20px;
            text-align: left;
        }
        .input-group label {
            display: block;
            margin-bottom: 8px;
            font-weight: 500;
            color: #555;
        }
        .input-group input[type="email"],
        .input-group input[type="password"] {
            width: 100%;
            padding: 12px 15px;
            border: 1px solid #ccc;
            border-radius: 5px;
            box-sizing: border-box;
            font-size: 1rem;
            transition: border-color 0.3s ease;
        }
        .input-group input[type="email"]:focus,
        .input-group input[type="password"]:focus {
            border-color: #007bff;
            outline: none;
        }
        button {
            width: 100%;
            padding: 12px;
            background-color: #2a3a4a;
            color: #fff;
            border: none;
            border-radius: 5px;
            font-size: 1.1rem;
            cursor: pointer;
            transition: background-color 0.3s ease;
            font-weight: 500;
        }
        button:hover {
            background-color: #1e2c3b;
        }
        .message {
            margin-top: 15px;
            font-size: 0.9rem;
            min-height: 1.2em; /* Reserva espacio */
        }
        .error-message {
             color: #dc3545;
        }
         .success-message {
            color: #28a745;
        }
    </style>
</head>
<body>
    <div class="login-container">
        <h2>Iniciar Sesión</h2>
        {{!-- El action y method apuntan a tu ruta de login en el backend --}}
        <form action="/api/sessions/login" method="POST">
            <div class="input-group">
                <label for="email">Email:</label>
                <input type="email" id="email" name="email" required>
            </div>
            <div class="input-group">
                <label for="password">Contraseña:</label>
                <input type="password" id="password" name="password" required>
            </div>

            {{!-- Este bloque muestra el error si viene renderizado desde el backend --}}
            {{#if error}}
                <p class="error-message">{{error}}</p>
            {{/if}}

            <button type="submit">Entrar</button>
        </form>
         <p class="message"><a href="/requestPasswordReset">¿Olvidaste tu contraseña?</a></p>
    </div>

    <script>
        document.addEventListener('DOMContentLoaded', function() {
            // Script para buscar el parámetro de error en la URL después de una redirección
            const urlParams = new URLSearchParams(window.location.search);
            const errorMessage = urlParams.get('error');
            const fetchMessageDiv = document.getElementById('fetchMessage'); // Asumiendo que mantienes este div para otros mensajes si los hay

            if (errorMessage) {
                 // Busca un elemento donde mostrar el error, podrías usar el div existente o uno específico
                 const existingErrorMessageDiv = document.querySelector('.error-message'); // Busca si Handlebars ya renderizó uno
                 if (!existingErrorMessageDiv) {
                     // Si Handlebars no lo renderizó (ej. primer intento fallido), crea uno o usa el div general
                      if (fetchMessageDiv) {
                         fetchMessageDiv.textContent = errorMessage;
                         fetchMessageDiv.classList.add('error-message');
                     } else {
                         console.error('No se encontró un elemento para mostrar el mensaje de error.');
                     }
                 }
                 // Si existingErrorMessageDiv ya existe, Handlebars ya lo manejó.
            }

            // Si tuvieras otros mensajes (ej. de éxito al restablecer contraseña),
            // podrías buscarlos de manera similar en la URL.
            const successMessage = urlParams.get('success');
             if (successMessage) {
                 if (fetchMessageDiv) {
                     fetchMessageDiv.textContent = successMessage;
                     fetchMessageDiv.classList.add('success-message');
                 }
             }


            // No hay lógica de fetch o preventDefault aquí, el formulario se envía de forma nativa.
        });
    </script>
</body>
</html>